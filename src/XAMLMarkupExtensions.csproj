<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net452;net40;net35</TargetFrameworks>
		<AssemblyTitle>XAMLMarkupExtensions</AssemblyTitle>
		<AssemblyName>XAMLMarkupExtensions</AssemblyName>
		<RootNamespace>XAMLMarkupExtensions</RootNamespace>
		<Version>$(GitVersion_NuGetVersion)</Version>
		<Company />
		<Product>XAML Markup Extensions</Product>
		<Authors>Uwe Mayer,Konrad Mattheis,Bernhard Millauer</Authors>
		<RepositoryUrl>https://github.com/XAMLMarkupExtensions/XAMLMarkupExtensions.git</RepositoryUrl>
		<PackageLicenseUrl>https://raw.githubusercontent.com/XAMLMarkupExtensions/XAMLMarkupExtensions/master/LICENSE</PackageLicenseUrl>
		<PackageProjectUrl>https://github.com/XAMLMarkupExtensions/XAMLMarkupExtensions</PackageProjectUrl>
		<Copyright>Uwe Mayer, Konrad Mattheis, Bernhard Millauer</Copyright>
		<Description>A base class for nested markup extensions and a collection of useful extensions for WPF 3.5 and 4.x.</Description>
		<PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
		<PackageReleaseNotes></PackageReleaseNotes>
		<NeutralLanguage>en-US</NeutralLanguage>
		<PackageTags>WPF markup extension nesting</PackageTags>

		<GenerateDocumentationFile>true</GenerateDocumentationFile>

		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
		<SignAssembly>true</SignAssembly>
		<DelaySign>false</DelaySign>
		<PublicSign>true</PublicSign>
		<AssemblyOriginatorKeyFile>public.snk</AssemblyOriginatorKeyFile>
	</PropertyGroup>

	<Choose>
		<When Condition="'$(Configuration)' == 'Release'">
			<PropertyGroup>
				<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
	  <Compile Remove="XAMLMarkupExtensions.netcoreapp3.0\**" />
	  <EmbeddedResource Remove="XAMLMarkupExtensions.netcoreapp3.0\**" />
	  <None Remove="XAMLMarkupExtensions.netcoreapp3.0\**" />
	</ItemGroup>

	<ItemGroup>
		<Reference Include="PresentationCore" />
		<Reference Include="PresentationFramework" />
		<Reference Include="System" />
		<Reference Include="System.Core" />
		<Reference Include="System.Drawing" />
		<Reference Condition="'$(TargetFramework)' != 'net35'" Include="System.Xaml" />
		<Reference Include="System.Xml.Linq" />
		<Reference Include="System.Xml" />
		<Reference Include="WindowsBase" />

		<PackageReference Include="GitVersionTask" Version="4.0.0" PrivateAssets="All" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta2-18618-05" PrivateAssets="All" />
	</ItemGroup>

	<Target Name="PublishToNugetWithAPIKey" AfterTargets="GenerateNuspec" Condition="Exists('$(SolutionDir)\..\..\nugetapikey.txt')">
		<ReadLinesFromFile File="$(SolutionDir)\..\..\nugetapikey.txt">
			<Output TaskParameter="Lines" PropertyName="NugetAPIKey" />
		</ReadLinesFromFile>
		<Exec WorkingDirectory="$(BaseDir)" Command="dotnet nuget push $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg -k $(NugetAPIKey) -s https://api.nuget.org/v3/index.json" />
	</Target>

	<Target Name="FixOnGitVersionTaskError" BeforeTargets="GetAssemblyVersion">
		<CreateProperty Value="0.0.1-notgitversion" Condition="'$(GitVersion_NuGetVersion)' == ''">
			<Output TaskParameter="Value" PropertyName="Version" />
		</CreateProperty>
	</Target>
</Project>